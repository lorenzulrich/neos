`7.3.0 (2021-12-09) <https://github.com/neos/neos-development-collection/releases/tag/7.3.0>`_
==============================================================================================

Overview of merged pull requests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Packages: ``Media`` ``Neos``

`FEATURE: Add Neos.CliSetup package <https://github.com/neos/neos-development-collection/pull/3505>`_
-----------------------------------------------------------------------------------------------------

The package contains the commands

``./flow welcome`` - Show a welcome message with informations how to setup neos via cli. This should be used later as post-create-project-cmd for the neos-distributions.
``./flow setup:database`` - Configure the database connection interactively
``./flow setup:imagehandler`` - Configure the image handling interactively

The solution is implemented as a separate package in the development collection for the following reasons:
- The browser based setup tools ``Neos.Setup`` + ``Neos.NeosSetup`` may get deprecated one day
- The commands are not added to an existing package as they should be uninstallable
- The development should happen in the dev-collection to be able to evolve with Neos

* Resolves: `#3506 <https://github.com/neos/neos-development-collection/issues/3506>`_

* Packages: ``CliSetup``

`FEATURE: AFX shorthand for @if and @process / generate keys <https://github.com/neos/neos-development-collection/pull/3428>`_
------------------------------------------------------------------------------------------------------------------------------

resolves: https://github.com/neos/fusion-afx/issues/29

Automatically generates key for ``@if`` and ``@process`` when no one is specified.
Multiple meta properties transpile to: '@if.if_1' and '@if.if_2'

**Demo**
```html
# afx
<Vendor.Site:Prototype @if={eel1} image.@if={eel2} />
```

```ts
# fusion
Vendor.Site:Prototype {
    @if.if_1 = ${eel1}
    image.@if.if_1 = ${eel2}
}
```


Resolves: https://github.com/neos/fusion-afx/issues/29

* Packages: ``Neos`` ``Fusion.Afx``

`FEATURE: Allow the format `avif` for thumbnail generation. <https://github.com/neos/neos-development-collection/pull/3135>`_
-----------------------------------------------------------------------------------------------------------------------------

As with ``webp`` the format has to be supported by the library behind imagine aswell.
Currently ``avif`` is only supported by imagick > 7.0.10-25 and libheif > 1.7.0.

* Resolves: `#3132 <https://github.com/neos/neos-development-collection/issues/3132>`_

* Packages: ``Media``

`FEATURE: Show asset collections and tag for read-only asset sources <https://github.com/neos/neos-development-collection/pull/3481>`_
--------------------------------------------------------------------------------------------------------------------------------------

Asset sources have a method ``isReadOnly()`` to tell whether they are read-only or not. A read-only asset source does not allow their content to be changed.

With this change, that read-only state is no longer coupled to the display of asset collections and tags in the media browser. Asset sources thus are free to implement a "connection" to asset collections and tags in any reasonable way.

* Fixes: `#3480 <https://github.com/neos/neos-development-collection/issues/3480>`_

* Packages: ``Neos`` ``Media.Browser``

`FEATURE: Introduce ThumbnailRefreshed signal to the Neos.Media package <https://github.com/neos/neos-development-collection/pull/3478>`_
-----------------------------------------------------------------------------------------------------------------------------------------

Packages like MOC.ImageOptimizer that are necessary for achieving optimal performance currently have to use unstable apis (aspects) to get access to freshly created image-crops. The existing signals ThumbnailPersisted and ThumbnailCreated do not cover this usecase yet.

This change introduces the ThumbnailRefreshed signal to the Neos.Media package that can be used by package authors to optimize the rendered thumbnails further before they are presented to the user.


* Packages: ``Neos`` ``Media``

`FEATURE: Filter by collections in media:removeunused <https://github.com/neos/neos-development-collection/pull/3466>`_
-----------------------------------------------------------------------------------------------------------------------

The assets, the ``media:removeunused`` command takes into account can now be filtered by collections by specifying a comma-separated list of collection titles with the ``â€”only-collections`` 

* Packages: ``Neos`` ``Media``

`FEATURE: Fusion/AFX escaped attribute names (paths) with dots inside <https://github.com/neos/neos-development-collection/pull/3442>`_
---------------------------------------------------------------------------------------------------------------------------------------

fixes `#3112 <https://github.com/neos/neos-development-collection/issues/3112>`_
and fixes closed https://github.com/neos/fusion-afx/issues/34

## What will be possible:
This makes it possible to use f.x. dots in attributes and thus Alpinejs in AFX and Fusion.
If you escape the attribute/path, the Fusion parser will not disturb you and wont make a nested object path out of it, as before.

### AFX:
```html
<div '@foo.bar'='baz'></div>
```

### Fusion:
```ts
Neos.Fusion:Tag {
    attributes.'@foo.bar' = 'baz'
}
```
### Fusion ast (simplified):
```json
{
    "__objectType": "Neos.Fusion:Tag",
    "attributes": {
        "@foo.bar": "baz"
    }
}
```

### HTML Output:
```html
<div @foo.bar="baz"></div>
```

## Whats currently the 'problem':

- AFX doesnt allow quoted attribute identifiers
- The Fusion parser splits at dots inside quotes too, making those paths nested.

So the above AFX code will not transpile to Fusion and trow an Error: ``Error during AFX-parsing: <div> Unexpected character "'" in identifier ""`` - It just means that quotes are not tolerated yet, which will be allowed with this pr. (see also https://github.com/neos/fusion-afx/issues/34)

The above Fusion code is possible but will lead to a different AST (than expected):
You can see, that the the quoted attribute ``'@foo.bar'`` will still be split at the dots and there will be a nested array instead of a simple ``key => (string)value`` pair.
```json
{
    "__objectType": "Neos.Fusion:Tag",
    "attributes": {
        "@foo": {
            "bar'": "baz"
        }
    }
}
```
To archive the 'expected' ast, the SPLIT_PATTERN_OBJECTPATH in the parser was adjusted to ignore dots inside of quotes.

* Packages: ``Neos`` ``Fusion.Afx`` ``Fusion``

`FEATURE: Allow setting the position of backend modules <https://github.com/neos/neos-development-collection/pull/3434>`_
-------------------------------------------------------------------------------------------------------------------------

**What I did**

This change only makes it possible for the menu when displayed
inside backend modules other than the content module.
The content module needs an additional change in the Neos.UI.

* Relates: `#3433 <https://github.com/neos/neos-development-collection/issues/3433>`_

Try the following setting to move the media module after the workspace module:

```yaml
Neos:
  Neos:
    modules:
      management:
        submodules:
          media:
            position: 'after workspaces'
```


* Packages: ``Neos``

`!!! BUGFIX: Always show current node in breadcrumb <https://github.com/neos/neos-development-collection/pull/3450>`_
---------------------------------------------------------------------------------------------------------------------

Fix `#3407 <https://github.com/neos/neos-development-collection/issues/3407>`_

* ``Neos.Neos:BreadcrumbMenu`` was using ``node``, this is fixed and use ``documentNode`` now
* ``Neos.Neos:BreadcrumbMenuItems `` returned the nodes in the wrong order
* On both prototypes the current node is now always rendered, even when it is hidden in index


* Packages: ``Neos``

`!!! BUGFIX: Set the default for new shortcut nodes to "parent" <https://github.com/neos/neos-development-collection/pull/3272>`_
---------------------------------------------------------------------------------------------------------------------------------

Currently the default is firstChidNode which leads to error
when adding a new shortcut, as there will never be a
child node in this case while targeting the parent
in this case

* Related: `#3256 <https://github.com/neos/neos-development-collection/issues/3256>`_

* Packages: ``Neos``

`BUGFIX: Add missing documentation of third parameter in sort operation <https://github.com/neos/neos-development-collection/pull/3527>`_
-----------------------------------------------------------------------------------------------------------------------------------------

This will fix #3238

* Packages: ``Neos``

`BUGFIX: Add possibility to trigger build manually <https://github.com/neos/neos-development-collection/pull/3526>`_
--------------------------------------------------------------------------------------------------------------------

Sometimes the build process doesn't start on a new pull request. With this change, we could trigger it manually and don't have to close and reopen the pull request

* Packages: ``.github``

`BUGFIX: Make NodeSearchService use new variable to search for identifier patterns <https://github.com/neos/neos-development-collection/pull/3429>`_
----------------------------------------------------------------------------------------------------------------------------------------------------

I just stumbled upon an issue, which was partly solved by `this PR <https://github.com/neos/neos-development-collection/pull/3165>`_.

In short, the parameter ``$term`` is modified by the ``foreach`` loop and thus another value than the original parameter is forwarded to ``$this->nodeDataRepository->findByProperties($term``. Thus the ``findByProperties`` from ``NodeSearchService`` doesn't work anymore as it was long time ago.

I've also considered the notes from @kdambekalns, except from

>     * pass ``$searchTerm`` (not ``$term``) to the ``NodeDataRepository`` to fix the actual bug

Instead of using ``$searchTerm`` I introduced a separate variable.The idea was to revert the overwritten ``$term`` and keep the original intention of the method as it was before and the search for an identifier is just an additional feature without changing the old code in any way including variable names and argument types for ``NodeDataRepository::findByProperties``.


* Packages: ``Neos``

`BUGFIX: Exclude "/sites"-node from dimension-migration <https://github.com/neos/neos-development-collection/pull/3110>`_
-------------------------------------------------------------------------------------------------------------------------

* Fixes: `#3109 <https://github.com/neos/neos-development-collection/issues/3109>`_

* Packages: ``ContentRepository``

`BUGFIX: prevent failure for disabled superTypes <https://github.com/neos/neos-development-collection/pull/3518>`_
------------------------------------------------------------------------------------------------------------------

When there are disabled ``superTypes`` in NodeTypes, an exception is thrown.
This happens when a superType is disabled in a NodeType and no specific editor is defined.

```yaml
'My.Package:FormElement':
  superTypes:
    'Neos.Form.Builder:FormElement': true
    'Neos.Form.Builder:LabelMixin': false
  properties:
    property:
      type: string
      ui:
        label: i18n
```

This issue was introduced in `#3395 <https://github.com/neos/neos-development-collection/issues/3395>`_

Closes `#3520 <https://github.com/neos/neos-development-collection/issues/3520>`_

* Packages: ``Neos``

`Revert "BUGFIX: Remove broken @Flow\IgnoreValidation from ContentRepository context" <https://github.com/neos/neos-development-collection/pull/3516>`_
-------------------------------------------------------------------------------------------------------------------------------------------------------

Reverts `#3411 <https://github.com/neos/neos-development-collection/issues/3411>`_ since this introduced a regression.
The new fix has been implemented in Flow: https://github.com/neos/flow-development-collection/pull/2632

* Fixes: `#3515 <https://github.com/neos/neos-development-collection/issues/3515>`_

* Packages: ``Fusion.Afx`` ``ContentRepository``

`BUGFIX: Render labels of authentication providers <https://github.com/neos/neos-development-collection/pull/3490>`_
--------------------------------------------------------------------------------------------------------------------

**What I did**
Extended the array that is used in the view. So that we have the provider identifier and the label.
So we use a structure like

`
[
    {
        identifier: 'Neos.Neos:Backend'
        label: 'Neos Backend label'
    },
    {
        identifier: 'Neos.Neos:FooName'
        label: 'Neos Backend Foo'
    }
]
`

**How to verify it**

    1. Configure a second authentication provider
    2. go to the user management in the backend
    3. create a new user
    4. check the drop down


* Fixes: `#3488 <https://github.com/neos/neos-development-collection/issues/3488>`_ 

* Packages: ``Media.Browser`` ``Neos``

`BUGFIX: apply editor defaults in creation dialog elements <https://github.com/neos/neos-development-collection/pull/3473>`_
----------------------------------------------------------------------------------------------------------------------------

Adjusts the ``DefaultPropertyEditorPostprocessor`` such that it respects the configured
property editor defaults not only for node _properties_ but for _creationDialog elements_ too.

This also fixes the default behavior for properties slightly by making sure that editor defaults
from ``Neos.Neos.userInterface.inspector.editors`` are applied even if no corresponding ``Neos.Neos.userInterface.inspector.dataTypes`` exists

* Fixes: `#3471 <https://github.com/neos/neos-development-collection/issues/3471>`_

* Packages: ``Media.Browser`` ``Neos``

`BUGFIX: NodeTypesLoader respect package overrides <https://github.com/neos/neos-development-collection/pull/3508>`_
--------------------------------------------------------------------------------------------------------------------


The NodeTypesLoader introduced in FLOW 7.2 does not allow to override NodeTypes in the newly introduced ``NodeTypes`` directory. This is because, the ``Configuration`` directory is loaded in a separate loop after the ``NodeTypes`` directory.  

For example, the NodeType ``Neos.Neos:ContentCollection`` cannot be overriden in the ``NodeTypes`` directory, because it is loaded in ``Neos.Neos/Configuration``. This means, everything defined in the ``NodeTypes`` directory of a custom package is overriden by the ``Neos.Neos/Configuration`` NodeType.


This PR uses a single ``$packages`` loop to first load from the ``NodeTypes`` directory, directly followed by the ``Configuration`` for a given ``$package``.

**How to verify it**

Try to modify ``Neos.Neos:ContentCollection`` like this
```
'Neos.Neos:ContentCollection':
  constraints:
    nodeTypes:
      '*': false
```
in a ``NodeTypes`` directory.


* Packages: ``Neos`` ``ContentRepository``

`BUGFIX: Improve message for node property conversion errors <https://github.com/neos/neos-development-collection/pull/3421>`_
------------------------------------------------------------------------------------------------------------------------------

This wraps the property mapper exceptions within ``Node::getProperty()``
in order to throw a more useful exception.

* Fixes: `#3420 <https://github.com/neos/neos-development-collection/issues/3420>`_

* Packages: ``Media.Browser`` ``Neos``

`BUGFIX: Prevent exception when deleting an electronic address <https://github.com/neos/neos-development-collection/pull/3436>`_
--------------------------------------------------------------------------------------------------------------------------------

When you delete an electronic address we throw a flash message that the address has been delete for the given user. We had the issue that the PersonName object could not be transformed to a string that is needed for the flash message.

**What I did**

Use the full name of the PersonName object instead of the direct PersonName object for the flash message.

**How to verify it**

1. Open the user module
2. Edit a user
3. Optionally create a electronic address
4. Delete a electronic address
5. check the flash message 

* Fixes: `#3435 <https://github.com/neos/neos-development-collection/issues/3435>`_

* Packages: ``Media.Browser`` ``Neos``

`BUGFIX: Include Memo fusion <https://github.com/neos/neos-development-collection/pull/3509>`_
----------------------------------------------------------------------------------------------

The Neos.Fusion:Memo object was introduced with Neos 7.2 but the include somehow slipped through.
This change adds the missing include to the Root.fusion

* Resolves: `#3510 <https://github.com/neos/neos-development-collection/issues/3510>`_

* Packages: ``Media.Browser`` ``Neos`` ``Fusion``

`BUGFIX: Fix wrong translation strings <https://github.com/neos/neos-development-collection/pull/3503>`_
--------------------------------------------------------------------------------------------------------

These were reversed somehowâ€¦

* Packages: ``Media.Browser`` ``Neos``

`BUGFIX: Fix two errors in Modules.xlf <https://github.com/neos/neos-development-collection/pull/3501>`_
--------------------------------------------------------------------------------------------------------

Fixes a duplicate id and the use of literal HTML tags in XLIFF.

* Packages: ``Media`` ``Neos``

`BUGFIX: Only use accounts that have Neos users attached <https://github.com/neos/neos-development-collection/pull/2981>`_
--------------------------------------------------------------------------------------------------------------------------

Since Neos 5.2.0 the use of frontend logins is broken. When logging in, an exception is thrown. The exact exception varies, but can be traced to ``Unexpected user type "". An account with the identifier "â€¦" exists, but the corresponding party is not a Neos User.`` eventually.

This change fixes that by not using ``getUser()`` directly, but doing more checks and eventually just returning ``null`` if no Neos user can be found for the authenticated tokens.

* Related: `#2577 <https://github.com/neos/neos-development-collection/issues/2577>`_
* Fixes: `#3088 <https://github.com/neos/neos-development-collection/issues/3088>`_

* Packages: ``Media`` ``Neos``

`BUGFIX: Flush content cache of pages with internal links when target changes <https://github.com/neos/neos-development-collection/pull/3483>`_
-----------------------------------------------------------------------------------------------------------------------------------------------

This extends ``\\Neos\\Neos\\Fusion\\Cache\\ContentCacheFlusher::registerChangeOnNodeIdentifier()``
such that it flushes *dynamic* node tags, too.

Background:

The ``Neos.Neos:ConvertUris`` processor invokes ``\\Neos\\Fusion\\Core\\Runtime::addCacheTag()`` for
every converted node and asset link leading to a cache tag of ``<type>DynamicTag_<id>`` (e.g.
``NodeDynamicTag_12345``) to be added to the current ``RuntimeContentCache``.

This fix makes sure that those dynamic node tags are also flushed whenever a node is changed.

* Fixes: `#3482 <https://github.com/neos/neos-development-collection/issues/3482>`_

* Packages: ``Neos``

`BUGFIX: Media Browser - Make font visible on tag hover <https://github.com/neos/neos-development-collection/pull/3460>`_
-------------------------------------------------------------------------------------------------------------------------

**What I did**
To make the tag name visible when hovering an active tag /collection/asset source I changed the background color to blue.  

**How I did it**
On hover the background color of a button changes to blue while the font color changes to white

**How to verify it**
In the media browser, if you have a lot of tags(more than 25 Tags), the collections and tags are displayed as 'buttons'. On hovering an active button, the text is white on blue. 

* Resolves: `#3461 <https://github.com/neos/neos-development-collection/issues/3461>`_ 


* Packages: ``Media.Browser``

`BUGFIX: Collapse afx whitespace connected to newlines to spaces inside of text literals <https://github.com/neos/neos-development-collection/pull/3462>`_
----------------------------------------------------------------------------------------------------------------------------------------------------------

The removal of all whitespaces connected to newlines yields unexpected results in text literals. This change adjusts the behavior and converts newlines and connected whitespaces inside of text literals to a single space. Whitespaces and connected newlines at the beginning and end of text literals are still removed.

So the following afx code:
```
<h1>
    This is a string literal
    with multiple lines
    that shall collapse
    to spaces.
</h1>
```
will be transpiled as:
```
Neos.Fusion:Tag {
    tagName = 'h1'
    content = 'This is a string literal with multiple lines that shall collapse to spaces.'
}
```
instead of: 
```
Neos.Fusion:Tag {
    tagName = 'h1'
    content = 'This is a string literalwith multiple linesthat shall collapseto spaces.'
}
```
* Relates: `#3331 <https://github.com/neos/neos-development-collection/issues/3331>`_

* Packages: ``.github`` ``Fusion.Afx``

`BUGFIX: Enable translations for overridden selectbox options <https://github.com/neos/neos-development-collection/pull/3395>`_
-------------------------------------------------------------------------------------------------------------------------------

**What I did / How I did it**

I altered the ``NodeTypeConfigurationEnrichmentAspect`` so that it takes the node type inheritance chain into account when translating select box option labels in the respective inspector editor configuration.

This addresses an issue originally reported in the UI repo: https://github.com/neos/neos-ui/issues/2005

**How to verify it**

You'll need a mixin NodeType that provides a select box property with internationalized option labels like this:

```yaml
    brandColor:
      type: string
      defaultValue: 'primary'
      ui:
        label: i18n
        reloadIfChanged: true
        inspector:
          group: style
          position: 10
          editor: 'Neos.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            values:
              'primary':
                label: i18n
              'turquoise':
                label: i18n
              'gray-dark':
                label: i18n
              'gray-light':
                label: i18n
              'toyota-red':
                label: i18n
              'yellow':
                label: i18n
```
(let's call this one ``Vendor.Site:Mixin.BrandColor``)

Then you'll need a second node type that inherits from ``Vendor.Site:Mixin.BrandColor`` and adds an new internationalized option to the property ``brandColor``:

```yaml
    brandColor:
      defaultValue: 'none'
      ui:
        inspector:
          editorOptions:
            values:
              'none':
                label: 'i18n'
```

**Before the fix** the new option will show up as a plain string ``"i18n"``.
**After the fix** the new option will show up as an XLIFF-translation address (bound to the node type that added the option).

**Additional remarks**

Imho, the entire ``NodeTypeConfigurationEnrichmentAspect`` should actually be moved out of the ``Neos.Neos`` package and into the UI package (All of these translations are an exclusive UI concern). Doing that would be out-of-scope for a bugfix though.

  - To be precise: There are no tests for this aspect to begin with and would be extremely difficult to add them. I'd suggest to move this concern over to the UI and handle it in a more testable manner.
- [x] The PR is created against the `lowest maintained branch <https://www.neos.io/features/release-roadmap.html>`_

* Packages: ``Neos``

`BUGFIX: Prevent error when setting collection prop in ContentCollectionRenderer <https://github.com/neos/neos-development-collection/pull/3424>`_
--------------------------------------------------------------------------------------------------------------------------------------------------

When using the ``ContentCollectionRenderer`` directly 
and setting the backwards compatible ``collection`` prop (to still support Neos 4.3) to a valid array of nodes
the following error appears due to the missing object definition:

```
No Fusion object found in path ".../collectionA<Neos.Neos:ContentCollectionRenderer>/items/__meta/process/collectionLegacy
```

**What I did**

Define the backwards compatible process as simple expression instead of an object without implementation

**How to verify it**

Try the following code somewhere in the demo site:

```
myCollection = Neos.Neos:ContentCollectionRenderer {
  collection = ${q(site).find('[instanceof Neos.Demo:Content.Text]').get()}
}
```


* Packages: ``Neos``

`BUGFIX: Allow searching by tag after searching by searchterm in the MediaBrowser <https://github.com/neos/neos-development-collection/pull/3453>`_
---------------------------------------------------------------------------------------------------------------------------------------------------

**What I did**
1. Go to the Neos Media Browser and enter a search term 
2. Remove the search term so that there is an empty string as search 
3. Search again 
4. Use any tag on the left side to search by tag 

After clicking on the Tag I would expect to see results by tag since the search field is empty. The search still tries search by the empty string and does not call the method findByTag. 

**How I did it**
In the controller where the search happens do not only check if the searchterm is null but also check if the searchterm is empty 

**How to verify it**
After searching by searchterm, then searching by an empty string you can then search by Tag. 

* Fixes: `#3455 <https://github.com/neos/neos-development-collection/issues/3455>`_

* Packages: ``Media.Browser``

`!!! TASK: Fusion Parser deprecate namespace alias <https://github.com/neos/neos-development-collection/pull/3523>`_
--------------------------------------------------------------------------------------------------------------------

related `#3498 <https://github.com/neos/neos-development-collection/issues/3498>`_

Add deprecation notice for the namespace to the parser and corresponding interface.

## Starting with Neos version 8, this code will not work anymore: 

### alias a namespace
```
namespace: Foo = Acme.Demo
video = Foo:YouTube
```

### use the default Neos.Fusion namespace
you will need to fully declare the namespace (add ``Neos.Fusion:`` infront)
```
content = DataStructure
```
or
```
root = Page
```

* Packages: ``Fusion.Afx`` ``Fusion``

`TASK: Add release notes for 7.3 <https://github.com/neos/neos-development-collection/pull/3534>`_
--------------------------------------------------------------------------------------------------


* Packages: ``Neos``

`TASK: Create trace for absorbed exception <https://github.com/neos/neos-development-collection/pull/3477>`_
------------------------------------------------------------------------------------------------------------

Without this, it's a lot harder to debug absorbed exceptions.

* Packages: ``Fusion``

`TASK: Add missing inversedBy Doctrine mapping <https://github.com/neos/neos-development-collection/pull/3524>`_
----------------------------------------------------------------------------------------------------------------

Update the Doctrine Mapping of the Tag model, for ``./flow doctrine:validate`` to not fail

* Fixes: `#3264 <https://github.com/neos/neos-development-collection/issues/3264>`_

* Packages: ``Neos`` ``Media``

`TASK: Use indented heredoc syntax for AFX tests <https://github.com/neos/neos-development-collection/pull/3463>`_
------------------------------------------------------------------------------------------------------------------

The indentation of heredoc and nowdoc was added in PHP 7.3 which is the minimal supported version of php.
This change adjusts the tests of the afx service to use the indented syntax to improve readability a lot.

https://wiki.php.net/rfc/flexible_heredoc_nowdoc_syntaxes

* Packages: ``Fusion.Afx``

`TASK: Document new case-insensitve operators <https://github.com/neos/neos-development-collection/pull/3512>`_
---------------------------------------------------------------------------------------------------------------

With the merge of https://github.com/neos/flow-development-collection/pull/2600 new case-insensitive operators are introduced and also documented

* Fixes: `#3511 <https://github.com/neos/neos-development-collection/issues/3511>`_

* Packages: ``Neos``

`TASK: Simplify rules, handle markdown files in .editorconfig <https://github.com/neos/neos-development-collection/pull/3487>`_
-------------------------------------------------------------------------------------------------------------------------------

Aligns the file with the one in the Flow development collection.

`TASK: inline 'docs' and cleaner code for Neos.Neos:ContentCollection <https://github.com/neos/neos-development-collection/pull/3438>`_
---------------------------------------------------------------------------------------------------------------------------------------

Fusion Neos.Neos:ContentCollection:
* cleaner ``class.@process.collectionClass``
* added some information about the caching as can be found in the root caching config.
* doc note for nodePath

Since the Neos.Neos:ContentCollection fusion prototype is at some point found by a neos beginner, i think it makes sense to explain certain things inline and make the code less verbose.

* Packages: ``Neos``

`TASK: Use 4 spaces for composer.json in editorconfig <https://github.com/neos/neos-development-collection/pull/3457>`_
-----------------------------------------------------------------------------------------------------------------------

4 spaces is what Composer uses itselfâ€¦

`TASK: Set default quality for pngs when using vips <https://github.com/neos/neos-development-collection/pull/3281>`_
---------------------------------------------------------------------------------------------------------------------

The vips-imagine integration actually uses ``png_quality`` to set the
resulting png quality instead of falling back to quality.

See https://github.com/rokka-io/imagine-vips/blob/master/lib/Imagine/Vips/Image.php#L979

GD and Imagick ignore the option.
This leads to much smaller file size without loosing quality in comparison to IM and GD.

**What I did**

Set ``png_quality`` as the other format qualities.

**How to verify it**

Install and configure Vips in any Neos project and recreate png thumbnails. Compare file sizes.
Or use (non-news) test script https://gist.github.com/Sebobo/94dd8ea909d2ed6ae813b7df70c20dc1

* Packages: ``Media``

`TASK: added german translations for user management <https://github.com/neos/neos-development-collection/pull/3437>`_
----------------------------------------------------------------------------------------------------------------------

**What I did**
I added some german translations, which are relevant for german users concerning the user management.

**How to verify it**
Set the Interface Language of your user to German and read the notifications/messages when trying different actions in the user management like adding/deleting/creating user accounts or electronical addresses.

* Packages: ``Neos``

`Detailed log <https://github.com/neos/neos-development-collection/compare/7.2.0...7.3.0>`_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
