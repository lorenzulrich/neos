`1.2.18 (2016-05-09) <https://github.com/neos/neos-development-collection/releases/tag/1.2.18>`_
================================================================================================

Overview of merged pull requests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`BUGFIX: Free index space at target position if no free index space is available <https://github.com/neos/neos-development-collection/pull/462>`_
-------------------------------------------------------------------------------------------------------------------------------------------------

If a node is inserted at a given position between nodes and no free sorting index is available, the sortindices on
that level are renumbered. The previous code for that could lead to unexpected node reordering and sortingindex
value escalation if workspaces or dimensions were used.

The following steps reproduce the error:
* In dimension A create nodes between other nodes until there are no free sortindices available
* Create a variant of those nodes in dimension B
* In dimension B add a new node in a place where no free sort index is available

Since the previous code is only repositioning one item of a given index and does not take workspaces and dimensions
into account this results in the following unwanted effects:
* Unwanted reordering of the nodes in dimension A
* In dimension B two nodes with identical sortingindex occur which makes the order of the nodes random
* If this is repeated multiple times the sorting indices in dimension A escalate quickly to very high values

This patch resolves this behavior by freeing index space at the target position instead of renumbering the
whole level by modifying all nodes on the given path and incrementing all sort indices above the reference position
a consistent behavior across workspaces and dimensions is ensured.

* Packages: ``Neos`` ``TYPO3CR``

`BUGFIX: Cancel previous load page requests <https://github.com/neos/neos-development-collection/pull/409>`_
------------------------------------------------------------------------------------------------------------

When a page takes long to load it can happen that a new page is requested instead.
If the new page loads before the previous slow request, the new page is loaded
first and then replaced with the old request once it finishes. This is a confusing
to the user and thus the last request should always take precedence.

* Packages: ``Neos``

`TASK: Adjust unit tests mocks to new errors <https://github.com/neos/neos-development-collection/pull/413>`_
-------------------------------------------------------------------------------------------------------------

Since ``phpunit-mock-objects`` 3.1.0 errors are thrown when a mocked
method is not allowed, non-existing, final or private.

This change adjusts to that change by getting rid of such mistakes in
the tests, which are made visible due to the change.

* Packages: ``Neos`` ``TYPO3CR``

`Detailed log <https://github.com/neos/neos-development-collection/compare/1.2.17...1.2.18>`_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
